version: 2.1

# Required in CircleCI: DOCKERHUB_USER, DOCKERHUB_PASS

commands:
  build_docker:
    parameters:
      image_name:
        type: string
    steps:
      - run:
          name: "Build << parameters.image_name >>"
          command: |
            export LATEST_COMMIT_HASH=`git rev-list -1 HEAD`
            export FOLDER_COMMIT_HASH=`git rev-list -1 HEAD << parameters.image_name >>`
            echo "LATEST_COMMIT_HASH=$LATEST_COMMIT_HASH"
            echo "FOLDER_COMMIT_HASH=$FOLDER_COMMIT_HASH"

            if [[ $LATEST_COMMIT_HASH == $FOLDER_COMMIT_HASH ]]; then
              cd << parameters.image_name >>
              docker login -u "${DOCKERHUB_USER}" --password-stdin <<< "${DOCKERHUB_PASS}"
              docker build -t interchainio/<< parameters.image_name >> .
              docker push interchainio/<< parameters.image_name >>
            fi
  build_all:
    steps:
      - run:
          name: "Build All"
          command: |
            # The parameters in find are Linux-specific. OSX does not have the -printf command, use "-execdir echo {} ';'" instead.
            for image in `find . -maxdepth 1 -type d -name '[^.]*' -printf '%f\n'`
            do
              test -f "${image}/Dockerfile" || continue
              echo "Processing ${image}"
              export LATEST_COMMIT_HASH=`git rev-list -1 HEAD`
              export FOLDER_COMMIT_HASH=`git rev-list -1 HEAD "${image}"`
              echo "LATEST_COMMIT_HASH=$LATEST_COMMIT_HASH"
              echo "FOLDER_COMMIT_HASH=$FOLDER_COMMIT_HASH"

              if [[ $LATEST_COMMIT_HASH == $FOLDER_COMMIT_HASH ]]; then
                echo "Building..."
                cd "${image}"
                if [ -f Dockerfile ]; then
                  docker login -u "${DOCKERHUB_USER}" -p "${DOCKERHUB_PASS}"
                  docker build -t "interchainio/${image}" .
                  docker push "interchainio/${image}"
                fi
              fi
            done

jobs:
  build_docker:
    machine: true
    steps:
      - checkout
      - build_docker:
          image_name: "node"
  build_all:
    machine: true
    steps:
      - checkout
      - build_all

workflows:
  version: 2.1
  images:
    jobs:
      - build_all:
          filters:
            branches:
              only:
                - master
